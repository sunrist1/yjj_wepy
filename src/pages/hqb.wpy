<style lang="scss" scoped>
  @import './lib.scss';
  .page{
    border-top:2rpx solid #eee;
    min-height: 100%;
    padding-bottom:80rpx;
  }
  .top_half{
    background-color: #fff;
    padding:30rpx;
    border-bottom:1rpx solid #eee;
    .title{
      border-bottom:2rpx dashed #eee;
      width:100%;
      height: 100rpx;
      line-height: 70rpx;
      text-align: center;
      font-size: 40rpx;
      display: block;
      .tips{
        display: block;
        font-size: 28rpx;
        color:#aaa;
        line-height: 30rpx;
      }
    }
    .info_box{
      padding:25rpx 0;
      .left,.right{
        width:50%;
        display: inline-block;
        vertical-align: top;
        .label{
          display: block;
          font-size: 32rpx;
          color:#aaa;
        }
      }
      .right{
        padding-left: 15rpx;
        box-sizing: border-box;
        .data2{
          text{
            display: block;
          }
          .num{
            font-size: 50rpx;
            margin:15rpx 0;
          }
          .datetime{
            font-size: 26rpx;
            color:#aaa;
          }
        }
      }
      .left{
        .data{
          font-size: 100rpx;
          font-weight: 500;
          margin-top:10rpx;
          text{
            font-size: 40rpx;
          }
          
        }
      }
    }
  }
  .echart_box{
    background-color: #fff;
    margin-top:20rpx;
    padding:30rpx;
    .tips{
      color:#aaa;
      font-size: 24rpx;
      display: block;
      width:88%;
      margin:10rpx auto;
    }
    .tab_list{
      display: flex;
      margin:30rpx 0;
      border:2rpx solid #eee;
      border-radius: 20rpx;
      overflow: hidden;
      .item{
        border-right:1rpx solid #eee;
        width:25%;
        height: 60rpx;
        line-height: 60rpx;
        text-align: center;
      }
      .active{
        color:#fff;
        background-color: $lightOrange;
      }
    }
    .chart_box{
      width:100%;
      height: 480rpx;
    }
  }

  .bottom{
    position: fixed;
    left:0rpx;
    bottom:0rpx;
    height: 90rpx;
    image{
      width:90rpx;
      height: 90rpx;
    }
    button{
      font-size: 36rpx;
      height: 90rpx;
      background-color: $orange;
      color:#fff;
      width:100%;
      border:none;
      
      border-radius: 0rpx;
    }
  }

  .fakecanvas{
    width:95%;
    height: 400rpx;
    margin:15rpx auto;
    background-color: #eee;
  }
</style>
<template>
  <view class="page">
    <view class="top_half">
      <view class='title'>
        <text class='tips'>充值基金</text>
        {{fundname}}
      </view>
      <view class='info_box'>
        <view class="left">
          <text class="label">七日年化</text>
          <view class="data f_orange">
            {{growthrate}}<text>%</text>
          </view>
        </view>
        <view class="right">
          <text class="label">万份收益</text>
          <view class='data2'>
            <text class='f_orange num'>{{fundincomeunit}}</text>
            <text class='datetime'>数据发布时间:{{navdate}}</text>
          </view>
        </view>
      </view>
    </view>

    <view class="echart_box">
      <text class="title">七日年化</text>
      <view class="tab_list">
        <view data-type='month' @tap='changeType' class="item {{chartDataType == 'month'?'active':''}}">近一月</view>
        <view data-type='3month' @tap='changeType' class="item {{chartDataType == '3month'?'active':''}}">近三月</view>
        <view data-type='6month' @tap='changeType' class="item {{chartDataType == '6month'?'active':''}}">近半年</view>
        <view data-type='1year' @tap='changeType' class="item {{chartDataType == '1year'?'active':''}}">近一年</view>
      </view>
      
      <canvas canvas-id='lineCanvas' class='chart_box'></canvas>

      <text class='tips'>收益数据仅供参考，过往业绩不预示未来表现，不构成投资建议。投资者据此操作，风险自担。市场有风险，投资需谨慎。</text>
    </view>

    <buybtn></buybtn>
    <gotohome :link.sync='hqb'></gotohome>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import config from '../config.js'
  // import Chart from '../components/line-chart.wpy'
  var wxCharts = require('../utils/wxcharts/wxcharts.js')
  // var lineChart = null

  import Gotohome from '../components/gotoHome'
  import Buybtn from '../components/buyBtn'

  export default class Hqb extends wepy.page {
    config = {
      navigationBarTitleText: '活期宝'
    }

    components = {
      gotohome: Gotohome,
      buybtn: Buybtn
    }

    data = {
      growthrate: 0,
      fundincomeunit: 0,
      navdate: '',
      fundname: '',
      homeImgUrl: `${config.service.imgUrlPath}/public/mobile/images/weapp/gotohome.png`,
      yLabelRows: 10,
      xLabelColor: '#000',
      chartWidth: '100rpx',
      increseData: [],
      chartDataType: ''
    }

    onLoad() {
      var that = this
      that.drawChart('3month')
      wepy.request({
        url: config.service.hqbInfoUrl,
        method: 'post',
        data: {},
        header: {
          'content-type': 'application/json'
        },
        success(res) {
          console.log(res)
          that.growthrate = (res.data.growthrate * 100 * 1).toFixed(2)
          that.fundincomeunit = (res.data.fundincomeunit * 1).toFixed(4)
          that.navdate = res.data.navdate.replace(/(\d{4})(\d{2})(\d{2})/, '$1-$2-$3')
          that.fundname = res.data.fundname
          that.$apply()
        }
      })
    }

    drawChart(type) {
      let that = this
      if (that.chartDataType === type) {
        return
      } else {
        that.increseData = []
        that.chartDataType = type
        that.$apply()
      }
      wepy.request({
        url: config.service.wanNavTrade,
        method: 'post',
        data: {
          datetype: that.chartDataType,
          windcode: '210012.OF'
        },
        header: {
          'content-type': 'application/json'
        },
        success(res) {
          let chartData = res.data.data.list
          if (chartData.length < 1) {
            wepy.showToast({
              title: '无相关数据',
              icon: 'none',
              duration: 2000
            })
            return
          }
          let length = chartData.length
          that.increseData = ((chartData[length - 1].WAN - chartData[length - 2].WAN) / chartData[length - 2].WAN * 100).toFixed(2)
          that.$apply()

          let windowWidth = 320
          try {
            let w = wepy.getSystemInfoSync()
            windowWidth = w.windowWidth
          } catch (e) {
            console.error('getSystemInfoSync failed!')
          }

          let valueList = []
          let dateList = []

          chartData.forEach(function (el) {
            dateList.push(el.DATEVALUE.substring(4))
            valueList.push(el.APR)
          })

          let chartName = '七日年化'
          let yTitle = ''
          let valueListCache = []
          valueList.forEach(function (el) {
            valueListCache.push(el)
          })
          var sortList = valueList.sort(function (a, b) {
            return a - b
          })

          new wxCharts({
            canvasId: 'lineCanvas',
            type: 'area',
            categories: dateList,
            legend: false,
            animation: false,
            // background: '#f5f5f5',
            series: [{
              name: chartName,
              data: valueListCache,
              color: '#ff9d68',
              format: function (val, name) {
                return val.toFixed(2) + '%'
              }
            }],
            xAxis: {
              disableGrid: true
            },
            yAxis: {
              title: yTitle,
              format: function (val) {
                return val.toFixed(2)
              },
              min: sortList[0] / 1.05
            },
            width: windowWidth,
            height: 200,
            dataLabel: false,
            dataPointShape: false,
            extra: {
              lineStyle: 'straight'
            }
          })
        }
      })
    }

    onShareAppMessage() {
      return {
        title: '亿基金—活期宝',
        path: '/pages/hqb',
        success: function(res) {
          // 转发成功
        },
        fail: function(res) {
          // 转发失败
        }
      }
    }

    methods = {
      changeType(e) {
        let that = this
        let type = e.currentTarget.dataset.type
        that.drawChart(type)
      }
    }
  }
</script>
